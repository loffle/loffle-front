{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport const usePostFetch = props => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n      setPosts(response.data);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    posts,\n    loading,\n    currentPage,\n    postsPerPage\n  };\n};\n\n_s(usePostFetch, \"+BPBRoyLxN1+E6ocVmhImLmBE6I=\");","map":{"version":3,"sources":["/Users/jeongminhyeong/100hb_front/src/hooks/usePostFetch.js"],"names":["React","useEffect","useState","axios","usePostFetch","props","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","fetchData","response","get","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,SAAf,GAA2B;AACzBL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACrB,4CADqB,CAAvB;AAGAT,MAAAA,QAAQ,CAACQ,QAAQ,CAACE,IAAV,CAAR;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDK,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAO;AAAER,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA,WAAlB;AAA+BE,IAAAA;AAA/B,GAAP;AACD,CAnBM;;GAAMR,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const usePostFetch = (props) => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const response = await axios.get(\n        \"https://jsonplaceholder.typicode.com/posts\"\n      );\n      setPosts(response.data);\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  return { posts, loading, currentPage, postsPerPage };\n};\n"]},"metadata":{},"sourceType":"module"}