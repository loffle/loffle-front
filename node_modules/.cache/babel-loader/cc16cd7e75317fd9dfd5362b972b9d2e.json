{"ast":null,"code":"var _jsxFileName = \"/Users/jeongminhyeong/100hb_front/src/components/FreeBoard/FreeBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { usePostFetch } from \"../../hooks/usePostFetch\";\nimport Header from \"../Header\";\nimport Pagination from \"../Pagination\";\nimport FreeBoardLists from \"./FreeBoardLists\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FreeBoard = props => {\n  _s();\n\n  const {\n    posts,\n    loading,\n    postsPerPage,\n    currentPage,\n    setCurrentPage\n  } = usePostFetch();\n  const indexOfLast = currentPage * postsPerPage; //10 = 1*10\n\n  const indexOfFirst = indexOfLast - postsPerPage; //0 = 10-10\n\n  function currentPosts(tmp) {\n    let currentPosts = 0;\n    currentPosts = tmp.slice(indexOfFirst, indexOfLast);\n    return currentPosts;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FreeBoardLists, {\n      posts: currentPosts(posts),\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length,\n      paginate: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FreeBoard, \"vQujD9q3yvz02wxL3ysNmrDAfPA=\", false, function () {\n  return [usePostFetch];\n});\n\n_c = FreeBoard;\nexport default FreeBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeBoard\");","map":{"version":3,"sources":["/Users/jeongminhyeong/100hb_front/src/components/FreeBoard/FreeBoard.jsx"],"names":["React","usePostFetch","Header","Pagination","FreeBoardLists","FreeBoard","props","posts","loading","postsPerPage","currentPage","setCurrentPage","indexOfLast","indexOfFirst","currentPosts","tmp","slice","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA;AALI,MAMFV,YAAY,EANhB;AAQA,QAAMW,WAAW,GAAGF,WAAW,GAAGD,YAAlC,CAT2B,CASqB;;AAChD,QAAMI,YAAY,GAAGD,WAAW,GAAGH,YAAnC,CAV2B,CAUsB;;AACjD,WAASK,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,QAAID,YAAY,GAAG,CAAnB;AACAA,IAAAA,YAAY,GAAGC,GAAG,CAACC,KAAJ,CAAUH,YAAV,EAAwBD,WAAxB,CAAf;AACA,WAAOE,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AACE,MAAA,KAAK,EAAEA,YAAY,CAACP,KAAD,CADrB;AAEE,MAAA,OAAO,EAAEC;AAFX;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,UAAD;AACE,MAAA,YAAY,EAAEC,YADhB;AAEE,MAAA,UAAU,EAAEF,KAAK,CAACU,MAFpB;AAGE,MAAA,QAAQ,EAAEN;AAHZ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAcD,CA/BD;;GAAMN,S;UAOAJ,Y;;;KAPAI,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { usePostFetch } from \"../../hooks/usePostFetch\";\nimport Header from \"../Header\";\nimport Pagination from \"../Pagination\";\nimport FreeBoardLists from \"./FreeBoardLists\";\n\nconst FreeBoard = (props) => {\n  const {\n    posts,\n    loading,\n    postsPerPage,\n    currentPage,\n    setCurrentPage,\n  } = usePostFetch();\n\n  const indexOfLast = currentPage * postsPerPage; //10 = 1*10\n  const indexOfFirst = indexOfLast - postsPerPage; //0 = 10-10\n  function currentPosts(tmp) {\n    let currentPosts = 0;\n    currentPosts = tmp.slice(indexOfFirst, indexOfLast);\n    return currentPosts;\n  }\n\n  return (\n    <>\n      <Header />\n      <FreeBoardLists\n        posts={currentPosts(posts)}\n        loading={loading}\n      ></FreeBoardLists>\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={setCurrentPage}\n      ></Pagination>\n    </>\n  );\n};\n\nexport default FreeBoard;\n"]},"metadata":{},"sourceType":"module"}