[{"/Users/jeongminhyeong/loffle_front/src/index.js":"1","/Users/jeongminhyeong/loffle_front/src/App.jsx":"2","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoard.jsx":"3","/Users/jeongminhyeong/loffle_front/src/hooks/usePostFetch.js":"4","/Users/jeongminhyeong/loffle_front/src/components/Pagination.jsx":"5","/Users/jeongminhyeong/loffle_front/src/components/Header.jsx":"6","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoardLists.jsx":"7","/Users/jeongminhyeong/loffle_front/src/components/Loading.jsx":"8","/Users/jeongminhyeong/loffle_front/src/components/NotFound.jsx":"9","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/Post.jsx":"10","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostDetail.jsx":"11","/Users/jeongminhyeong/loffle_front/src/components/Search.jsx":"12","/Users/jeongminhyeong/loffle_front/src/components/Share.jsx":"13","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostCreate.jsx":"14","/Users/jeongminhyeong/loffle_front/src/components/Drawer.jsx":"15","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewBoard.jsx":"16","/Users/jeongminhyeong/loffle_front/src/hooks/useReviewFetch.js":"17","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewDetail.jsx":"18","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewComment.jsx":"19","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostComment.jsx":"20","/Users/jeongminhyeong/loffle_front/src/context.js":"21","/Users/jeongminhyeong/loffle_front/src/components/Login.jsx":"22"},{"size":219,"mtime":1630633247754,"results":"23","hashOfConfig":"24"},{"size":1185,"mtime":1631099372997,"results":"25","hashOfConfig":"24"},{"size":1409,"mtime":1630940172182,"results":"26","hashOfConfig":"24"},{"size":736,"mtime":1630644722681,"results":"27","hashOfConfig":"24"},{"size":1899,"mtime":1630938065443,"results":"28","hashOfConfig":"24"},{"size":1164,"mtime":1630934325429,"results":"29","hashOfConfig":"24"},{"size":1437,"mtime":1631013357099,"results":"30","hashOfConfig":"24"},{"size":378,"mtime":1630645395957,"results":"31","hashOfConfig":"24"},{"size":885,"mtime":1630934670220,"results":"32","hashOfConfig":"24"},{"size":1171,"mtime":1630822798483,"results":"33","hashOfConfig":"24"},{"size":3927,"mtime":1631018646923,"results":"34","hashOfConfig":"24"},{"size":711,"mtime":1631015148654,"results":"35","hashOfConfig":"24"},{"size":1891,"mtime":1631001607088,"results":"36","hashOfConfig":"24"},{"size":2936,"mtime":1630918934801,"results":"37","hashOfConfig":"24"},{"size":1559,"mtime":1631103598221,"results":"38","hashOfConfig":"24"},{"size":2669,"mtime":1631013625319,"results":"39","hashOfConfig":"24"},{"size":748,"mtime":1631019955954,"results":"40","hashOfConfig":"24"},{"size":4428,"mtime":1631098823783,"results":"41","hashOfConfig":"24"},{"size":2441,"mtime":1631022490795,"results":"42","hashOfConfig":"24"},{"size":931,"mtime":1631018568079,"results":"43","hashOfConfig":"24"},{"size":440,"mtime":1631074900070,"results":"44","hashOfConfig":"24"},{"size":1837,"mtime":1631103169126,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"13myu1y",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jeongminhyeong/loffle_front/src/index.js",[],["95","96"],"/Users/jeongminhyeong/loffle_front/src/App.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoard.jsx",[],"/Users/jeongminhyeong/loffle_front/src/hooks/usePostFetch.js",["97","98"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const usePostFetch = (props) => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(8);\n  //총 데이터를 postsPerPage 만큼 등분해서 보여줍니다.\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const response = await axios.get(\n        \"https://jsonplaceholder.typicode.com/posts\"\n      );\n      setPosts(response.data);\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  return { posts, loading, postsPerPage, currentPage, setCurrentPage };\n};\n","/Users/jeongminhyeong/loffle_front/src/components/Pagination.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Header.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoardLists.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Loading.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/NotFound.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/Post.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostDetail.jsx",["99"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n//\nimport Share from \"../Share\";\n//\nimport profile from \"../../images/profile.svg\";\nimport like from \"../../images/like_btn.svg\";\nimport share from \"../../images/share.svg\";\nimport commentIcon from \"../../images/comment_btn.svg\";\nimport pencil from \"../../images/pencil.svg\";\n//\nimport Loading from \"../Loading\";\nimport PostComment from \"./PostComment\";\n\nconst PostDetail = (props) => {\n  const { postId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [post, setPost] = useState([]);\n  const [comments, setComments] = useState([]);\n\n  //공유버튼 모달\n  const [isShareModalOn, setIsShareModalOn] = useState(false);\n  const handleShareModal = (e) => {\n    setIsShareModalOn(!isShareModalOn);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const post = await axios.get(\n        `https://jsonplaceholder.typicode.com/posts/${postId}`\n      );\n      setPost(post.data);\n\n      const comments = await axios.get(\n        `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n      );\n      setComments(comments.data);\n\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {loading && <Loading />}\n      {isShareModalOn && <Share handleShareModal={handleShareModal} />}\n      <article className=\"p-4 border-b border-gray-light\">\n        <div className=\"flex justify-between mb-4\">\n          <div className=\"flex\">\n            <img className=\"w-11 h-11\" src={profile} alt=\"\" />\n            <div className=\"pl-3\">\n              <h3 className=\"font-bold\">{`유저 ${post.userId}`}</h3>\n              <span className=\"text-gray-light\">00-00-00</span>\n            </div>\n          </div>\n          <div>\n            <span className=\"text-gray-light\">수정</span>\n            <span\n              className=\"text-gray-light pl-4\"\n              onClick={() => alert(\"정말 삭제하시겠습니까?\")}\n            >\n              삭제\n            </span>\n          </div>\n        </div>\n\n        {/* 제목 */}\n        <h1 className=\"text-2xl font-bold line-clamp-2 mb-4\">{post.title}</h1>\n        {/* 내용 */}\n        <p className=\"text-base mb-4\">{post.body}</p>\n\n        <div className=\"flex items-center justify-between text-lg\">\n          <div className=\"flex opacity-80 gap-3\">\n            <button onClick={() => handleShareModal()}>\n              <img className=\"w-4 h-4\" src={share} alt=\"shate-button\" />\n            </button>\n          </div>\n          <div className=\"flex\">\n            {/* 좋아요 개수 */}\n            <img className=\"pr-1\" src={like} alt=\"like-button\" />\n            <span className=\"pr-3 text-red\">\n              {Math.floor(Math.random() * 11)}\n            </span>\n            {/* 댓글 개수 */}\n            <img className=\"pr-1\" src={commentIcon} alt=\"comment-button\" />\n            <span className=\"text-primary\">{comments.length}</span>\n          </div>\n        </div>\n      </article>\n\n      {/* 댓글 */}\n      {comments.map((comment) => (\n        <PostComment key={comment.id} comment={comment} />\n      ))}\n\n      {/* 댓글 작성 */}\n      <div className=\"sticky bottom-3 flex items-center justify-between mx-3\">\n        <div className=\"flex justify-between px-3 py-1 w-10/12 h-14 bg-white rounded-2xl shadow-lg\">\n          <input\n            className=\"w-full outline-none\"\n            type=\"text\"\n            name=\"text\"\n            maxLength=\"300\"\n            placeholder=\"댓글을 입력하세요.\"\n            autoComplete=\"false\"\n          />\n        </div>\n        <div className=\"flex items-center justify-center h-12 w-12 min-w-min ml-2 mt-1 bg-primary opacity-90 rounded-full shadow-xl\">\n          <img className=\"w-5 h-5\" src={pencil} alt=\"write-comment-button\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostDetail;\n","/Users/jeongminhyeong/loffle_front/src/components/Search.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Share.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostCreate.jsx",["100","101","102"],"import React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n//\nimport attachment from \"../../images/attachment.svg\";\nimport pencil from \"../../images/pencil.svg\";\n\nconst PostCreate = (props) => {\n  const [logoLoading, setLogoLoading] = useState(false);\n  const [fileUrl, setFileUrl] = useState({ file: \"\", previewURL: \"\" });\n\n  const attachmentInput = useRef();\n\n  const onChange = (e) => {\n    //e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.onloadend = () => {\n      setFileUrl({\n        file: file,\n        previewURL: reader.result,\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <>\n      <div className=\"min-h-screen\">\n        {/* header */}\n        <div className=\"flex items-center justify-between mb-1 p-5 h-14 border-b border-gray-border\">\n          <h1 className=\"text-xl font-bold\">자유게시판 > 글 작성</h1>\n          <Link to={{ pathname: \"/community/post\" }}>\n            <span className=\"text-gray h-5 ml-5 bg-white\">뒤로가기</span>\n          </Link>\n        </div>\n\n        {/* form */}\n        <form className=\"m-1 border-2 border-gray-border shadow-lg rounded-lg\">\n          {/* title */}\n          <p className=\"p-4 border-b border-gray-border\">\n            <input\n              className=\"w-full h-5 text-gray-darkest text-base font-bold outline-none\"\n              name=\"title\"\n              placeholder=\"글 제목\"\n            />\n          </p>\n          {/* desc */}\n          <p className=\"p-4 border-b border-gray-border\">\n            <textarea\n              className=\"h-44 w-full text-base outline-none resize-none\"\n              name=\"text\"\n              placeholder=\"글 내용을 작성해주세요.\"\n            ></textarea>\n          </p>\n          {/* option */}\n          <div className=\"flex justify-between items-center bg-gray-border bg-opacity-20\">\n            {/* attachment */}\n            <input\n              ref={attachmentInput}\n              type=\"file\"\n              accept=\"image/jpg,impge/png,image/jpeg,image/gif\"\n              className=\"hidden\"\n              name=\"file\"\n              onChange={onChange}\n            />\n            <button\n              onClick={(e) => {\n                e.preventDefault();\n                attachmentInput.current.click();\n              }}\n            >\n              <img\n                className=\"w-5 h-5 m-3 hover:opacity-80\"\n                src={attachment}\n                alt=\"\"\n              />\n            </button>\n            <div className=\"flex items-center justify-center w-12 h-12 bg-primary opacity-90 rounded-br-lg hover:bg-opacity-80 cursor-pointer\">\n              <img className=\"w-5 h-5\" src={pencil} alt=\"write-post-button\" />\n            </div>\n          </div>\n        </form>\n      </div>\n      {/* {fileUrl ?? <img src={fileUrl.previewURL} alt=\"test\"></img>} */}\n    </>\n  );\n};\n\nexport default PostCreate;\n","/Users/jeongminhyeong/loffle_front/src/components/Drawer.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewBoard.jsx",[],"/Users/jeongminhyeong/loffle_front/src/hooks/useReviewFetch.js",["103"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const useReviewFetch = (props) => {\n  const [reviews, setreviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [reviewsPerPage, setreviewsPerPage] = useState(1);\n  //총 데이터를 reviewsPerPage 만큼 등분해서 보여줍니다.\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const response = await axios.get(\n        \"https://jsonplaceholder.typicode.com/photos\"\n      );\n      setreviews(response.data);\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  return { reviews, loading, reviewsPerPage, currentPage, setCurrentPage };\n};\n","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewDetail.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewComment.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostComment.jsx",[],"/Users/jeongminhyeong/loffle_front/src/context.js",[],"/Users/jeongminhyeong/loffle_front/src/components/Login.jsx",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"113","line":8,"column":24,"nodeType":"111","messageId":"112","endLine":8,"endColumn":39},{"ruleId":"114","severity":1,"message":"115","line":44,"column":6,"nodeType":"116","endLine":44,"endColumn":8,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"118","line":8,"column":10,"nodeType":"111","messageId":"112","endLine":8,"endColumn":21},{"ruleId":"109","severity":1,"message":"119","line":8,"column":23,"nodeType":"111","messageId":"112","endLine":8,"endColumn":37},{"ruleId":"109","severity":1,"message":"120","line":9,"column":10,"nodeType":"111","messageId":"112","endLine":9,"endColumn":17},{"ruleId":"109","severity":1,"message":"121","line":8,"column":26,"nodeType":"111","messageId":"112","endLine":8,"endColumn":43},{"ruleId":"109","severity":1,"message":"122","line":12,"column":10,"nodeType":"111","messageId":"112","endLine":12,"endColumn":15},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'setPostsPerPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'logoLoading' is assigned a value but never used.","'setLogoLoading' is assigned a value but never used.","'fileUrl' is assigned a value but never used.","'setreviewsPerPage' is assigned a value but never used.","'_user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [postId]",{"range":"128","text":"129"},[1263,1265],"[postId]"]