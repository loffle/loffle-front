[{"/Users/jeongminhyeong/loffle_front/src/index.js":"1","/Users/jeongminhyeong/loffle_front/src/App.jsx":"2","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoard.jsx":"3","/Users/jeongminhyeong/loffle_front/src/components/Header.jsx":"4","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoardLists.jsx":"5","/Users/jeongminhyeong/loffle_front/src/components/Loading.jsx":"6","/Users/jeongminhyeong/loffle_front/src/components/NotFound.jsx":"7","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/Post.jsx":"8","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostDetail.jsx":"9","/Users/jeongminhyeong/loffle_front/src/components/Search.jsx":"10","/Users/jeongminhyeong/loffle_front/src/components/Share.jsx":"11","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostCreate.jsx":"12","/Users/jeongminhyeong/loffle_front/src/components/Drawer.jsx":"13","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewBoard.jsx":"14","/Users/jeongminhyeong/loffle_front/src/hooks/useReviewFetch.js":"15","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewDetail.jsx":"16","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewComment.jsx":"17","/Users/jeongminhyeong/loffle_front/src/config.js":"18","/Users/jeongminhyeong/loffle_front/src/context.js":"19","/Users/jeongminhyeong/loffle_front/src/components/Login.jsx":"20","/Users/jeongminhyeong/loffle_front/src/hooks/useCommunityFetch.js":"21","/Users/jeongminhyeong/loffle_front/src/components/helpers.js":"22","/Users/jeongminhyeong/loffle_front/src/API.js":"23","/Users/jeongminhyeong/loffle_front/src/hooks/useCommunityFetch2.js":"24","/Users/jeongminhyeong/loffle_front/src/components/QuestionBoard/QuestionBoard.jsx":"25","/Users/jeongminhyeong/loffle_front/src/components/QuestionBoard/Question.jsx":"26","/Users/jeongminhyeong/loffle_front/src/components/QuestionBoard/QuestionAnswer.jsx":"27","/Users/jeongminhyeong/loffle_front/src/components/Join.jsx":"28","/Users/jeongminhyeong/loffle_front/src/components/NoticeBoard/NoticeBoard.jsx":"29","/Users/jeongminhyeong/loffle_front/src/components/CreateButton.jsx":"30","/Users/jeongminhyeong/loffle_front/src/Warning.jsx":"31","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostDetailContent.jsx":"32","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostDetailUpdate.jsx":"33","/Users/jeongminhyeong/loffle_front/src/components/NoticeBoard/Notice.jsx":"34","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/Comment/Comment.jsx":"35","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/Comment/CommentCreate.jsx":"36","/Users/jeongminhyeong/loffle_front/src/hooks/useCommentFetch.js":"37","/Users/jeongminhyeong/loffle_front/src/components/NewPagination.jsx":"38","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewCreate.jsx":"39","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewUpdate.jsx":"40","/Users/jeongminhyeong/loffle_front/src/components/ModalComentCreate.jsx":"41","/Users/jeongminhyeong/loffle_front/src/components/QuestionBoard/QuestionCreate.jsx":"42","/Users/jeongminhyeong/loffle_front/src/components/QuestionBoard/QuestionUpdate.jsx":"43"},{"size":224,"mtime":1632744039290,"results":"44","hashOfConfig":"45"},{"size":2103,"mtime":1632916215386,"results":"46","hashOfConfig":"45"},{"size":1164,"mtime":1633078945784,"results":"47","hashOfConfig":"45"},{"size":1164,"mtime":1630934325429,"results":"48","hashOfConfig":"45"},{"size":1768,"mtime":1633079087055,"results":"49","hashOfConfig":"45"},{"size":378,"mtime":1632720372623,"results":"50","hashOfConfig":"45"},{"size":885,"mtime":1630934670220,"results":"51","hashOfConfig":"45"},{"size":1199,"mtime":1631510948577,"results":"52","hashOfConfig":"45"},{"size":1739,"mtime":1632914894059,"results":"53","hashOfConfig":"45"},{"size":1255,"mtime":1633077132057,"results":"54","hashOfConfig":"45"},{"size":2062,"mtime":1632914894063,"results":"55","hashOfConfig":"45"},{"size":4899,"mtime":1632914894059,"results":"56","hashOfConfig":"45"},{"size":2432,"mtime":1633002536608,"results":"57","hashOfConfig":"45"},{"size":4472,"mtime":1633071749713,"results":"58","hashOfConfig":"45"},{"size":2948,"mtime":1633078731639,"results":"59","hashOfConfig":"45"},{"size":9328,"mtime":1632914894062,"results":"60","hashOfConfig":"45"},{"size":4006,"mtime":1632983400011,"results":"61","hashOfConfig":"45"},{"size":307,"mtime":1632750221518,"results":"62","hashOfConfig":"45"},{"size":440,"mtime":1631510948586,"results":"63","hashOfConfig":"45"},{"size":9102,"mtime":1633002738266,"results":"64","hashOfConfig":"45"},{"size":1543,"mtime":1631510948587,"results":"65","hashOfConfig":"45"},{"size":850,"mtime":1632744039287,"results":"66","hashOfConfig":"45"},{"size":250,"mtime":1631510948573,"results":"67","hashOfConfig":"45"},{"size":1611,"mtime":1632744039288,"results":"68","hashOfConfig":"45"},{"size":3081,"mtime":1633071408957,"results":"69","hashOfConfig":"45"},{"size":3994,"mtime":1632987603035,"results":"70","hashOfConfig":"45"},{"size":2794,"mtime":1632984822853,"results":"71","hashOfConfig":"45"},{"size":5132,"mtime":1632744039281,"results":"72","hashOfConfig":"45"},{"size":2635,"mtime":1633070162963,"results":"73","hashOfConfig":"45"},{"size":509,"mtime":1632744039276,"results":"74","hashOfConfig":"45"},{"size":149,"mtime":1632744039275,"results":"75","hashOfConfig":"45"},{"size":7184,"mtime":1632914894060,"results":"76","hashOfConfig":"45"},{"size":4404,"mtime":1632914894060,"results":"77","hashOfConfig":"45"},{"size":1157,"mtime":1632744039283,"results":"78","hashOfConfig":"45"},{"size":1723,"mtime":1632984370571,"results":"79","hashOfConfig":"45"},{"size":2275,"mtime":1632914894057,"results":"80","hashOfConfig":"45"},{"size":1796,"mtime":1632914894063,"results":"81","hashOfConfig":"45"},{"size":705,"mtime":1632744039282,"results":"82","hashOfConfig":"45"},{"size":4844,"mtime":1632921520488,"results":"83","hashOfConfig":"45"},{"size":4681,"mtime":1632914894062,"results":"84","hashOfConfig":"45"},{"size":2650,"mtime":1632984082717,"results":"85","hashOfConfig":"45"},{"size":6072,"mtime":1633006916476,"results":"86","hashOfConfig":"45"},{"size":6058,"mtime":1633210065434,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"13myu1y",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jeongminhyeong/loffle_front/src/index.js",[],["178","179"],"/Users/jeongminhyeong/loffle_front/src/App.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoard.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Header.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoardLists.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Loading.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/NotFound.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/Post.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostDetail.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Search.jsx",["180"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport search from \"../images/search_btn.svg\";\n\nconst Search = ({ setPageNumber, handleSearchModal, setSearchTerm }) => {\n  const [state, setState] = useState(\"\");\n  const initial = useRef(true);\n\n  useEffect(() => {\n    if (initial.current) {\n      initial.current = false;\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setPageNumber(1);\n      setSearchTerm(state);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n\n  return (\n    <div\n      className=\"max-w-480 mx-auto flex items-center justify-center fixed top-0 left-0 right-0 bottom-0 bg-modal z-50\"\n      onClick={handleSearchModal}\n    >\n      <div\n        className=\"flex items-center px-5 py-4 w-10/12 h-16 rounded-lg bg-white\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <img className=\"w-8 h-16\" src={search} alt=\"search-button\" />\n\n        <input\n          className=\"w-full h-full ml-5 outline-none\"\n          placeholder=\"검색어를 입력하세요.\"\n          onChange={(event) => setState(event.currentTarget.value)}\n        ></input>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","/Users/jeongminhyeong/loffle_front/src/components/Share.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostCreate.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Drawer.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewBoard.jsx",[],"/Users/jeongminhyeong/loffle_front/src/hooks/useReviewFetch.js",[],"/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewDetail.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewComment.jsx",[],"/Users/jeongminhyeong/loffle_front/src/config.js",[],"/Users/jeongminhyeong/loffle_front/src/context.js",[],"/Users/jeongminhyeong/loffle_front/src/components/Login.jsx",["181","182","183","184"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport { useForm } from \"react-hook-form\";\nimport { PROXY } from \"../config\";\n//\nimport Warning from \"../Warning\";\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [tokenAuth, setTokenAuth] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  //   setUser만 사용하기 때문에 user는 _표시를 해두었다 [객관적이지 않음]\n  const [user, setUser] = useContext(Context); // eslint-disable-line no-unused-vars\n  const navigate = useNavigate(); //Naviagte hook 사용\n\n  //\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n  //console.log(watch(\"email\"));\n\n  useEffect(() => {\n    // if (cookie.load(\"csrftoken\")) {\n    //   cookie.remove(\"csrftoken\", { path: \"/\" });\n    // }\n\n    // try {\n    //   axios\n    //     .get(`${PROXY}/api-auth/login/`)\n    //     .then((res) => {\n    //       setCsrftoken(cookie.load(\"csrftoken\"));\n    //     })\n    //     .catch();\n    // } catch (error) {\n    //   setError(true);\n    // }\n\n    fetchToken();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchToken = async () => {\n    try {\n      var myHeaders = new Headers();\n      //myHeaders.append(\"Cookie\", `csrftoken=${csrftoken}`);\n\n      var formdata = new FormData();\n      formdata.append(\"username\", \"seller@b.com\");\n      formdata.append(\"password\", \"qlalfqjsgh\");\n\n      var requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: formdata,\n        redirect: \"follow\",\n      };\n\n      await fetch(`${PROXY}/account/login`, requestOptions)\n        .then((response) => response.json())\n        .then((result) => {\n          console.log(`token = ${result.token}`);\n          setTokenAuth(() => result.token);\n          localStorage.setItem(\"access_token\", result.token); //localStorage token 생성\n          localStorage.setItem(\"access_nickname\", result.nickname); //localStorage token 생성\n          alert(\"로그인에 성공하였습니다.\");\n          navigate(\"/\");\n        })\n        .catch((error) => console.log(\"error\", error));\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  const onSubmit = (data) => {\n    console.log(`tokenAuth = ${tokenAuth}`);\n\n    try {\n      var urlencoded = new URLSearchParams();\n      urlencoded.append(\"username\", \"seller@b.com\");\n      urlencoded.append(\"password\", \"qlalfqjsgh\");\n      urlencoded.append(\"next\", \"/\");\n\n      var requestOptions = {\n        method: \"POST\",\n        body: urlencoded,\n        redirect: \"follow\",\n      };\n\n      fetch(`${PROXY}/api-auth/login/`, requestOptions)\n        .then((response) => response.text())\n        .then((result) => {\n          console.log(\"로그인 결과!\");\n          console.log(result);\n          setUser({\n            username: \"seller\",\n            token: tokenAuth,\n          });\n\n          navigate(\"/\"); //login완료하면 index로 리다이렉트\n        })\n        .catch((error) => console.log(\"error\", error));\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  const handleInput = (e) => {\n    const name = e.currentTarget.name;\n    const value = e.currentTarget.value;\n\n    if (name === \"username\") setUsername(value);\n    if (name === \"password\") setPassword(value);\n  };\n\n  return (\n    // <div classNameName=\"\">\n    //   {error && <div classNameName=\"text-red\">There was an error!</div>}\n    //   <label>Username: </label>\n    //   <input\n    //     type=\"text\"\n    //     value={username}\n    //     name=\"username\"\n    //     onChange={handleInput}\n    //   />\n    //   <label>Password: </label>\n    //   <input\n    //     type=\"password\"\n    //     value={password}\n    //     name=\"password\"\n    //     onChange={handleInput}\n    //   />\n    //   <button onClick={handleSubmit}>Login</button>\n    // </div>\n    <section className=\"flex h-screen items-center pt-10\">\n      <div className=\"bg-white w-full h-screen px-6 flex items-center justify-center\">\n        <div className=\"w-full h-full\">\n          <div className=\"flex justify-center flex-col\">\n            <span className=\"text-xl font-bold leading-tight mt-12\">\n              로그인을 해주세요.\n            </span>\n          </div>\n          <form className=\"mt-8\" onSubmit={handleSubmit(onSubmit)}>\n            <div>\n              <label className=\"block text-gray-darkest\">이메일</label>\n              <input\n                name=\"email\"\n                {...register(\"email\", {\n                  required: true,\n                  pattern: /^\\S+@\\S+$/i,\n                })}\n                placeholder=\"이메일을 입력해 주세요.\"\n                className=\"w-full px-4 py-3 rounded-lg mt-2 border border-gray-border focus:border-primary focus:bg-white focus:outline-none\"\n                autoFocus\n              />\n              {errors.email && errors.email.type === \"required\" && (\n                <Warning>이메일을 입력해주세요.</Warning>\n              )}\n              {errors.email && errors.email.type === \"pattern\" && (\n                <Warning>이메일 형식에 맞지 않습니다.</Warning>\n              )}\n            </div>\n            <button\n              type=\"submit\"\n              className=\"w-full flex justify-center bg-primary bg-opacity-90 hover:bg-opacity-80 focus:bg-opacity-100 text-white font-semibold rounded-lg px-4 py-3 mt-6\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n              >\n                <g fill=\"none\" fillRule=\"evenodd\" stroke=\"#FFF\" strokeWidth=\"2\">\n                  <rect width=\"17.2\" height=\"14\" x=\"3.4\" y=\"5\" rx=\"3\"></rect>\n                  <path d=\"M3.2 5.6L12 12l8.8-6.4\"></path>\n                </g>\n              </svg>{\" \"}\n              <span className=\"ml-2\">이메일로 시작하기</span>\n            </button>\n          </form>\n          <hr className=\"my-6 border-gray-border w-full\" />\n          <button\n            type=\"button\"\n            className=\"w-full block bg-white hover:bg-gray-100 focus:bg-gray-100 font-semibold rounded-lg px-4 py-3 border border-gray-border\"\n          >\n            <div className=\"flex items-center justify-center\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 18 18\"\n              >\n                <g fill=\"none\" fillRule=\"evenodd\">\n                  <path\n                    fill=\"#EA4335\"\n                    d=\"M9 3.48c1.69 0 2.83.73 3.48 1.34l2.54-2.48C13.46.89 11.43 0 9 0 5.48 0 2.44 2.02.96 4.96l2.91 2.26C4.6 5.05 6.62 3.48 9 3.48z\"\n                  ></path>\n                  <path\n                    fill=\"#4285F4\"\n                    d=\"M17.64 9.2c0-.74-.06-1.28-.19-1.84H9v3.34h4.96c-.1.83-.64 2.08-1.84 2.92l2.84 2.2c1.7-1.57 2.68-3.88 2.68-6.62z\"\n                  ></path>\n                  <path\n                    fill=\"#FBBC05\"\n                    d=\"M3.88 10.78A5.54 5.54 0 0 1 3.58 9c0-.62.11-1.22.29-1.78L.96 4.96A9.008 9.008 0 0 0 0 9c0 1.45.35 2.82.96 4.04l2.92-2.26z\"\n                  ></path>\n                  <path\n                    fill=\"#34A853\"\n                    d=\"M9 18c2.43 0 4.47-.8 5.96-2.18l-2.84-2.2c-.76.53-1.78.9-3.12.9-2.38 0-4.4-1.57-5.12-3.74L.97 13.04C2.45 15.98 5.48 18 9 18z\"\n                  ></path>\n                  <path d=\"M0 0h18v18H0z\"></path>\n                </g>\n              </svg>\n              <span className=\"ml-3 text-gray-social\">\n                <span className=\"font-bold\">Google</span>로 시작하기\n              </span>\n            </div>\n          </button>\n          <button\n            type=\"button\"\n            className=\"w-full mt-3 block bg-white hover:bg-gray-100 focus:bg-gray-100 font-semibold rounded-lg px-4 py-3 border border-gray-border\"\n          >\n            <div className=\"flex items-center justify-center\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 18 18\"\n              >\n                <path\n                  fill=\"#1877f2\"\n                  fillRule=\"evenodd\"\n                  d=\"M18 9a9 9 0 1 0-10.406 8.89v-6.288H5.309V9h2.285V7.017c0-2.255 1.343-3.501 3.4-3.501.984 0 2.014.175 2.014.175v2.215h-1.135c-1.118 0-1.467.694-1.467 1.406V9h2.496l-.399 2.602h-2.097v6.289C14.71 17.215 18 13.492 18 9\"\n                ></path>\n              </svg>\n              <span className=\"ml-3 text-gray-social\">\n                <span className=\"font-bold\">Facebook</span>로 시작하기\n              </span>\n            </div>\n          </button>\n          <p className=\"mt-5 text-center text-sm text-gray\">\n            걱정마세요! 여러분의 활동은 SNS에 노출되지 않습니다.\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","/Users/jeongminhyeong/loffle_front/src/hooks/useCommunityFetch.js",[],"/Users/jeongminhyeong/loffle_front/src/components/helpers.js",[],"/Users/jeongminhyeong/loffle_front/src/API.js",[],"/Users/jeongminhyeong/loffle_front/src/hooks/useCommunityFetch2.js",[],"/Users/jeongminhyeong/loffle_front/src/components/QuestionBoard/QuestionBoard.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/QuestionBoard/Question.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/QuestionBoard/QuestionAnswer.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Join.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/NoticeBoard/NoticeBoard.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/CreateButton.jsx",[],"/Users/jeongminhyeong/loffle_front/src/Warning.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostDetailContent.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostDetailUpdate.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/NoticeBoard/Notice.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/Comment/Comment.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/Comment/CommentCreate.jsx",[],"/Users/jeongminhyeong/loffle_front/src/hooks/useCommentFetch.js",[],"/Users/jeongminhyeong/loffle_front/src/components/NewPagination.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewCreate.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewUpdate.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/ModalComentCreate.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/QuestionBoard/QuestionCreate.jsx",["185"],"/* eslint-disable no-fallthrough */\n/* eslint-disable default-case */\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { PROXY } from \"../../config\";\nimport Loading from \"../Loading\";\n//\nimport attachment from \"../../images/attachment.svg\";\nimport pencil from \"../../images/pencil.svg\";\n\nconst QuestionCreate = (props) => {\n  window.scrollTo(0, 0);\n  const navigate = useNavigate(); //Naviagte hook 사용\n\n  const attachmentInput = useRef();\n\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    content: \"\",\n    questionType: \"\",\n  });\n  const titleInput = useRef();\n\n  const { title, content, questionType } = inputs;\n\n  const onChange = (e) => {\n    //   //e.preventDefault();\n    //   let reader = new FileReader();\n    //   let file = e.target.files[0];\n    //   reader.onloadend = () => {\n    //     setFileUrl({\n    //       file: file,\n    //       /questionURL: reader.result,\n    //     });\n    //   };\n    //   reader.readAsDataURL(file);\n    const { value, name } = e.target; // 우선 e.target 에서 name 과 value 를 추출\n    setInputs({\n      ...inputs, // 기존의 input 객체를 복사한 뒤\n      [name]: value, // name 키를 가진 값을 value 로 설정\n    });\n  };\n\n  const [questionTypes, setQuestionTypes] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleCreate = () => {\n    if (!content) {\n      alert(\"내용을 입력해주세요\");\n      return;\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", `Token ${localStorage.access_token}`); //localStorage token load\n\n    const question_type = questionTypes.filter(\n      (type) => type.name === questionType\n    ); //name -> id 변환 작업\n\n    const formdata = new FormData();\n    formdata.append(\"title\", title);\n    formdata.append(\"content\", content);\n    formdata.append(\"question_type\", question_type[0].id);\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: formdata,\n      redirect: \"follow\",\n    };\n\n    fetch(`${PROXY}/community/question`, requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        navigate(`/community/question`);\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetch(`${PROXY}/community/questiontype`, {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        setQuestionTypes(result);\n        setLoading(false);\n      })\n      .catch((error) => console.log(\"error\", error));\n  }, []);\n\n  return (\n    <>\n      <div className=\"min-h-screen\">\n        {/* header */}\n        <div className=\"flex items-center justify-between mb-1 p-5 h-14 border-b border-gray-border\">\n          <h1 className=\"text-xl font-bold\"> QnA &gt; 글 작성</h1>\n          <Link to={{ pathname: \"/community/question\" }}>\n            <span className=\"text-gray h-5 ml-5 bg-white\">뒤로가기</span>\n          </Link>\n        </div>\n\n        {/* form */}\n        <form className=\"p-1\">\n          <select\n            name=\"questionType\"\n            defaultValue=\"default\"\n            onChange={onChange}\n            className=\"text-gray w-full h-12 p-2 bg-white border-2 border-gray-border rounded-lg outline-none\"\n          >\n            <option value=\"default\" disabled>\n              문의 유형을 선택해주세요.\n            </option>\n            {loading ||\n              questionTypes.map((questionType) => (\n                <option key={questionType.id}>{questionType.name}</option>\n              ))}\n          </select>\n\n          <div className=\"mt-1 border-2 border-gray-border shadow-lg rounded-lg\">\n            {/* title */}\n            <p className=\"p-4 border-b border-gray-border\">\n              <input\n                className=\"w-full h-5 text-gray-darkest text-base font-bold outline-none\"\n                name=\"title\"\n                value={title}\n                onChange={onChange}\n                ref={titleInput}\n                placeholder=\"글 제목을 작성해주세요.\"\n                autoComplete=\"off\"\n              />\n            </p>\n            {/* desc */}\n            <p className=\"p-4 border-b border-gray-border\">\n              <textarea\n                className=\"h-44 w-full text-base outline-none resize-none\"\n                name=\"content\"\n                value={content}\n                onChange={onChange}\n                placeholder=\"글 내용을 작성해주세요.\"\n              ></textarea>\n            </p>\n            {/* option */}\n            <div className=\"flex justify-between items-center bg-gray-border bg-opacity-20\">\n              {/* attachment */}\n              <input\n                ref={attachmentInput}\n                type=\"file\"\n                accept=\"image/jpg,impge/png,image/jpeg,image/gif\"\n                className=\"hidden\"\n                name=\"file\"\n                onChange={onChange}\n              />\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  attachmentInput.current.click();\n                }}\n              >\n                <img\n                  className=\"w-5 h-5 m-3 hover:opacity-80\"\n                  src={attachment}\n                  alt=\"\"\n                />\n              </button>\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  handleCreate();\n                }}\n              >\n                <div className=\"flex items-center justify-center w-12 h-12 bg-primary opacity-90 rounded-br-lg hover:bg-opacity-80 cursor-pointer\">\n                  <img\n                    className=\"w-5 h-5\"\n                    src={pencil}\n                    alt=\"write/question-button\"\n                  />\n                </div>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default QuestionCreate;\n","/Users/jeongminhyeong/loffle_front/src/components/QuestionBoard/QuestionUpdate.jsx",["186","187"],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":22,"column":6,"nodeType":"194","endLine":22,"endColumn":28,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":10,"column":10,"nodeType":"198","messageId":"199","endLine":10,"endColumn":18},{"ruleId":"196","severity":1,"message":"200","line":11,"column":10,"nodeType":"198","messageId":"199","endLine":11,"endColumn":18},{"ruleId":"196","severity":1,"message":"201","line":13,"column":10,"nodeType":"198","messageId":"199","endLine":13,"endColumn":15},{"ruleId":"196","severity":1,"message":"202","line":112,"column":9,"nodeType":"198","messageId":"199","endLine":112,"endColumn":20},{"ruleId":"196","severity":1,"message":"203","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":15},{"ruleId":"196","severity":1,"message":"204","line":10,"column":9,"nodeType":"198","messageId":"199","endLine":10,"endColumn":17},{"ruleId":"192","severity":1,"message":"205","line":79,"column":6,"nodeType":"194","endLine":79,"endColumn":8,"suggestions":"206"},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPageNumber'. Either include it or remove the dependency array. If 'setPageNumber' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["209"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'error' is assigned a value but never used.","'handleInput' is assigned a value but never used.","'Loading' is defined but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PROXY'. Either include it or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [setPageNumber, setSearchTerm, state]",{"range":"215","text":"216"},"Update the dependencies array to be: [PROXY]",{"range":"217","text":"218"},[569,591],"[setPageNumber, setSearchTerm, state]",[2388,2390],"[PROXY]"]