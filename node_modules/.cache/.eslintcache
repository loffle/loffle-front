[{"/Users/jeongminhyeong/loffle_front/src/index.js":"1","/Users/jeongminhyeong/loffle_front/src/App.jsx":"2","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoard.jsx":"3","/Users/jeongminhyeong/loffle_front/src/hooks/usePostFetch.js":"4","/Users/jeongminhyeong/loffle_front/src/components/Pagination.jsx":"5","/Users/jeongminhyeong/loffle_front/src/components/Header.jsx":"6","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoardLists.jsx":"7","/Users/jeongminhyeong/loffle_front/src/components/Loading.jsx":"8","/Users/jeongminhyeong/loffle_front/src/components/NotFound.jsx":"9","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/Post.jsx":"10","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostDetail.jsx":"11","/Users/jeongminhyeong/loffle_front/src/components/Search.jsx":"12","/Users/jeongminhyeong/loffle_front/src/components/Share.jsx":"13","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostCreate.jsx":"14","/Users/jeongminhyeong/loffle_front/src/components/Drawer.jsx":"15","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewBoard.jsx":"16","/Users/jeongminhyeong/loffle_front/src/hooks/useReviewFetch.js":"17","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewDetail.jsx":"18","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewComment.jsx":"19","/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostComment.jsx":"20","/Users/jeongminhyeong/loffle_front/src/context.js":"21","/Users/jeongminhyeong/loffle_front/src/components/Login.jsx":"22","/Users/jeongminhyeong/loffle_front/src/config.js":"23"},{"size":219,"mtime":1630633247754,"results":"24","hashOfConfig":"25"},{"size":1185,"mtime":1631109001289,"results":"26","hashOfConfig":"25"},{"size":1409,"mtime":1630940172182,"results":"27","hashOfConfig":"25"},{"size":904,"mtime":1631113143669,"results":"28","hashOfConfig":"25"},{"size":1899,"mtime":1630938065443,"results":"29","hashOfConfig":"25"},{"size":1164,"mtime":1630934325429,"results":"30","hashOfConfig":"25"},{"size":1437,"mtime":1631013357099,"results":"31","hashOfConfig":"25"},{"size":378,"mtime":1630645395957,"results":"32","hashOfConfig":"25"},{"size":885,"mtime":1630934670220,"results":"33","hashOfConfig":"25"},{"size":1171,"mtime":1630822798483,"results":"34","hashOfConfig":"25"},{"size":3927,"mtime":1631018646923,"results":"35","hashOfConfig":"25"},{"size":711,"mtime":1631015148654,"results":"36","hashOfConfig":"25"},{"size":1891,"mtime":1631001607088,"results":"37","hashOfConfig":"25"},{"size":2936,"mtime":1630918934801,"results":"38","hashOfConfig":"25"},{"size":1559,"mtime":1631109001290,"results":"39","hashOfConfig":"25"},{"size":2669,"mtime":1631013625319,"results":"40","hashOfConfig":"25"},{"size":748,"mtime":1631019955954,"results":"41","hashOfConfig":"25"},{"size":4428,"mtime":1631109001291,"results":"42","hashOfConfig":"25"},{"size":2441,"mtime":1631022490795,"results":"43","hashOfConfig":"25"},{"size":931,"mtime":1631018568079,"results":"44","hashOfConfig":"25"},{"size":440,"mtime":1631109001292,"results":"45","hashOfConfig":"25"},{"size":2370,"mtime":1631109792725,"results":"46","hashOfConfig":"25"},{"size":227,"mtime":1631110322352,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"13myu1y",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/jeongminhyeong/loffle_front/src/index.js",[],["99","100"],"/Users/jeongminhyeong/loffle_front/src/App.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoard.jsx",[],"/Users/jeongminhyeong/loffle_front/src/hooks/usePostFetch.js",["101","102","103"],"/Users/jeongminhyeong/loffle_front/src/components/Pagination.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Header.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/FreeBoardLists.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Loading.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/NotFound.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/Post.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostDetail.jsx",["104"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n//\nimport Share from \"../Share\";\n//\nimport profile from \"../../images/profile.svg\";\nimport like from \"../../images/like_btn.svg\";\nimport share from \"../../images/share.svg\";\nimport commentIcon from \"../../images/comment_btn.svg\";\nimport pencil from \"../../images/pencil.svg\";\n//\nimport Loading from \"../Loading\";\nimport PostComment from \"./PostComment\";\n\nconst PostDetail = (props) => {\n  const { postId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [post, setPost] = useState([]);\n  const [comments, setComments] = useState([]);\n\n  //공유버튼 모달\n  const [isShareModalOn, setIsShareModalOn] = useState(false);\n  const handleShareModal = (e) => {\n    setIsShareModalOn(!isShareModalOn);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const post = await axios.get(\n        `https://jsonplaceholder.typicode.com/posts/${postId}`\n      );\n      setPost(post.data);\n\n      const comments = await axios.get(\n        `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n      );\n      setComments(comments.data);\n\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {loading && <Loading />}\n      {isShareModalOn && <Share handleShareModal={handleShareModal} />}\n      <article className=\"p-4 border-b border-gray-light\">\n        <div className=\"flex justify-between mb-4\">\n          <div className=\"flex\">\n            <img className=\"w-11 h-11\" src={profile} alt=\"\" />\n            <div className=\"pl-3\">\n              <h3 className=\"font-bold\">{`유저 ${post.userId}`}</h3>\n              <span className=\"text-gray-light\">00-00-00</span>\n            </div>\n          </div>\n          <div>\n            <span className=\"text-gray-light\">수정</span>\n            <span\n              className=\"text-gray-light pl-4\"\n              onClick={() => alert(\"정말 삭제하시겠습니까?\")}\n            >\n              삭제\n            </span>\n          </div>\n        </div>\n\n        {/* 제목 */}\n        <h1 className=\"text-2xl font-bold line-clamp-2 mb-4\">{post.title}</h1>\n        {/* 내용 */}\n        <p className=\"text-base mb-4\">{post.body}</p>\n\n        <div className=\"flex items-center justify-between text-lg\">\n          <div className=\"flex opacity-80 gap-3\">\n            <button onClick={() => handleShareModal()}>\n              <img className=\"w-4 h-4\" src={share} alt=\"shate-button\" />\n            </button>\n          </div>\n          <div className=\"flex\">\n            {/* 좋아요 개수 */}\n            <img className=\"pr-1\" src={like} alt=\"like-button\" />\n            <span className=\"pr-3 text-red\">\n              {Math.floor(Math.random() * 11)}\n            </span>\n            {/* 댓글 개수 */}\n            <img className=\"pr-1\" src={commentIcon} alt=\"comment-button\" />\n            <span className=\"text-primary\">{comments.length}</span>\n          </div>\n        </div>\n      </article>\n\n      {/* 댓글 */}\n      {comments.map((comment) => (\n        <PostComment key={comment.id} comment={comment} />\n      ))}\n\n      {/* 댓글 작성 */}\n      <div className=\"sticky bottom-3 flex items-center justify-between mx-3\">\n        <div className=\"flex justify-between px-3 py-1 w-10/12 h-14 bg-white rounded-2xl shadow-lg\">\n          <input\n            className=\"w-full outline-none\"\n            type=\"text\"\n            name=\"text\"\n            maxLength=\"300\"\n            placeholder=\"댓글을 입력하세요.\"\n            autoComplete=\"false\"\n          />\n        </div>\n        <div className=\"flex items-center justify-center h-12 w-12 min-w-min ml-2 mt-1 bg-primary opacity-90 rounded-full shadow-xl\">\n          <img className=\"w-5 h-5\" src={pencil} alt=\"write-comment-button\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostDetail;\n","/Users/jeongminhyeong/loffle_front/src/components/Search.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/Share.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostCreate.jsx",["105","106","107"],"import React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n//\nimport attachment from \"../../images/attachment.svg\";\nimport pencil from \"../../images/pencil.svg\";\n\nconst PostCreate = (props) => {\n  const [logoLoading, setLogoLoading] = useState(false);\n  const [fileUrl, setFileUrl] = useState({ file: \"\", previewURL: \"\" });\n\n  const attachmentInput = useRef();\n\n  const onChange = (e) => {\n    //e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.onloadend = () => {\n      setFileUrl({\n        file: file,\n        previewURL: reader.result,\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <>\n      <div className=\"min-h-screen\">\n        {/* header */}\n        <div className=\"flex items-center justify-between mb-1 p-5 h-14 border-b border-gray-border\">\n          <h1 className=\"text-xl font-bold\">자유게시판 > 글 작성</h1>\n          <Link to={{ pathname: \"/community/post\" }}>\n            <span className=\"text-gray h-5 ml-5 bg-white\">뒤로가기</span>\n          </Link>\n        </div>\n\n        {/* form */}\n        <form className=\"m-1 border-2 border-gray-border shadow-lg rounded-lg\">\n          {/* title */}\n          <p className=\"p-4 border-b border-gray-border\">\n            <input\n              className=\"w-full h-5 text-gray-darkest text-base font-bold outline-none\"\n              name=\"title\"\n              placeholder=\"글 제목\"\n            />\n          </p>\n          {/* desc */}\n          <p className=\"p-4 border-b border-gray-border\">\n            <textarea\n              className=\"h-44 w-full text-base outline-none resize-none\"\n              name=\"text\"\n              placeholder=\"글 내용을 작성해주세요.\"\n            ></textarea>\n          </p>\n          {/* option */}\n          <div className=\"flex justify-between items-center bg-gray-border bg-opacity-20\">\n            {/* attachment */}\n            <input\n              ref={attachmentInput}\n              type=\"file\"\n              accept=\"image/jpg,impge/png,image/jpeg,image/gif\"\n              className=\"hidden\"\n              name=\"file\"\n              onChange={onChange}\n            />\n            <button\n              onClick={(e) => {\n                e.preventDefault();\n                attachmentInput.current.click();\n              }}\n            >\n              <img\n                className=\"w-5 h-5 m-3 hover:opacity-80\"\n                src={attachment}\n                alt=\"\"\n              />\n            </button>\n            <div className=\"flex items-center justify-center w-12 h-12 bg-primary opacity-90 rounded-br-lg hover:bg-opacity-80 cursor-pointer\">\n              <img className=\"w-5 h-5\" src={pencil} alt=\"write-post-button\" />\n            </div>\n          </div>\n        </form>\n      </div>\n      {/* {fileUrl ?? <img src={fileUrl.previewURL} alt=\"test\"></img>} */}\n    </>\n  );\n};\n\nexport default PostCreate;\n","/Users/jeongminhyeong/loffle_front/src/components/Drawer.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewBoard.jsx",[],"/Users/jeongminhyeong/loffle_front/src/hooks/useReviewFetch.js",["108"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const useReviewFetch = (props) => {\n  const [reviews, setreviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [reviewsPerPage, setreviewsPerPage] = useState(1);\n  //총 데이터를 reviewsPerPage 만큼 등분해서 보여줍니다.\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      const response = await axios.get(\n        \"https://jsonplaceholder.typicode.com/photos\"\n      );\n      setreviews(response.data);\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  return { reviews, loading, reviewsPerPage, currentPage, setCurrentPage };\n};\n","/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewDetail.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/ReviewBoard/ReviewComment.jsx",[],"/Users/jeongminhyeong/loffle_front/src/components/FreeBoard/PostComment.jsx",[],"/Users/jeongminhyeong/loffle_front/src/context.js",[],"/Users/jeongminhyeong/loffle_front/src/components/Login.jsx",["109"],"import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n//API import 해야함.. ? 뭐 말하는 건지는 아직 모름\nimport { Context } from \"../context\";\n//\nimport { SESSION_ID, CSRF_TOKEN } from \"../config\";\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  //   setUser만 사용하기 때문에 user는 _표시를 해두었다 [객관적이지 않음]\n  const [_user, setUser] = useContext(Context);\n  const navigate = useNavigate(); //Naviagte hook 사용\n\n  const setCookie = function setCookie_by_name_value_period_domain(\n    name,\n    value,\n    period,\n    domain\n  ) {\n    let date = new Date();\n    date.setDate(date.getDate() + period);\n    //let Cookie = `${name}=${value};Expires=${date.toUTCString()};Domain=${domain}`;\n    let Cookie = `${name}=${value};Expires=${date.toUTCString()};`;\n    document.cookie = Cookie;\n  };\n\n  const handleSubmit = async () => {\n    setError(false);\n    try {\n      /* //6:47:20\n        const requestToken = await API.getRequestToken();\n        const sessionId = await API.authenticate(\n           requestToken,\n           username,\n           password \n        );\n        */\n      //\n      setUser({\n        //임의로 hard coding 해버림\n        sessionId: SESSION_ID,\n        username: \"seller\",\n      });\n\n      setCookie(\"sessionid\", SESSION_ID, \"14\", \"loffle.cf\");\n      setCookie(\"csrftoken\", CSRF_TOKEN, \"14\", \"loffle.cf\");\n\n      navigate(\"/\"); //login완료하면 index로 리다이렉트\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  const handleInput = (e) => {\n    const name = e.currentTarget.name;\n    const value = e.currentTarget.value;\n\n    if (name === \"username\") setUsername(value);\n    if (name === \"password\") setPassword(value);\n  };\n\n  return (\n    <div className=\"\">\n      {error && <div className=\"text-red\">There was an error!</div>}\n      <label>Username: </label>\n      <input\n        type=\"text\"\n        value={username}\n        name=\"username\"\n        onChange={handleInput}\n      />\n      <input\n        type=\"password\"\n        value={password}\n        name=\"password\"\n        onChange={handleInput}\n      />\n      <button onClick={handleSubmit}>Login</button>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/jeongminhyeong/loffle_front/src/config.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":13},{"ruleId":"114","severity":1,"message":"118","line":8,"column":24,"nodeType":"116","messageId":"117","endLine":8,"endColumn":39},{"ruleId":"114","severity":1,"message":"119","line":10,"column":10,"nodeType":"116","messageId":"117","endLine":10,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":44,"column":6,"nodeType":"122","endLine":44,"endColumn":8,"suggestions":"123"},{"ruleId":"114","severity":1,"message":"124","line":8,"column":10,"nodeType":"116","messageId":"117","endLine":8,"endColumn":21},{"ruleId":"114","severity":1,"message":"125","line":8,"column":23,"nodeType":"116","messageId":"117","endLine":8,"endColumn":37},{"ruleId":"114","severity":1,"message":"126","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":17},{"ruleId":"114","severity":1,"message":"127","line":8,"column":26,"nodeType":"116","messageId":"117","endLine":8,"endColumn":43},{"ruleId":"114","severity":1,"message":"128","line":14,"column":10,"nodeType":"116","messageId":"117","endLine":14,"endColumn":15},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'setPostsPerPage' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'logoLoading' is assigned a value but never used.","'setLogoLoading' is assigned a value but never used.","'fileUrl' is assigned a value but never used.","'setreviewsPerPage' is assigned a value but never used.","'_user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [postId]",{"range":"134","text":"135"},[1263,1265],"[postId]"]